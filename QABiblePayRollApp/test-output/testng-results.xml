<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="8" total="43" passed="34" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-04T13:27:17 IST" name="CrossBrowserSuite" finished-at="2024-08-04T13:32:06 IST" duration-ms="289115">
    <groups>
      <group name="Group B">
        <method signature="LoginTestClass.verifyTheExpectedPageIsOpenWhileHittingTheURL()[pri:1, instance:testClasses.LoginTestClass@60db1c0e]" name="verifyTheExpectedPageIsOpenWhileHittingTheURL" class="testClasses.LoginTestClass"/>
        <method signature="LoginTestClass.verifyCheckBoxRememberMeIsSelectedOrNot()[pri:4, instance:testClasses.LoginTestClass@60db1c0e]" name="verifyCheckBoxRememberMeIsSelectedOrNot" class="testClasses.LoginTestClass"/>
        <method signature="PasswordResetTestClass.verifyCancelButtonClickRedirectToLoginPageOrNot()[pri:4, instance:testClasses.PasswordResetTestClass@4ee203eb]" name="verifyCancelButtonClickRedirectToLoginPageOrNot" class="testClasses.PasswordResetTestClass"/>
        <method signature="LoginTestClass.verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot()[pri:5, instance:testClasses.LoginTestClass@60db1c0e]" name="verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot" class="testClasses.LoginTestClass"/>
        <method signature="LoginTestClass.verifyTheExpectedPageIsOpenWhileHittingTheURL()[pri:1, instance:testClasses.LoginTestClass@1f760b47]" name="verifyTheExpectedPageIsOpenWhileHittingTheURL" class="testClasses.LoginTestClass"/>
        <method signature="LoginTestClass.verifyCheckBoxRememberMeIsSelectedOrNot()[pri:4, instance:testClasses.LoginTestClass@1f760b47]" name="verifyCheckBoxRememberMeIsSelectedOrNot" class="testClasses.LoginTestClass"/>
        <method signature="PasswordResetTestClass.verifyCancelButtonClickRedirectToLoginPageOrNot()[pri:4, instance:testClasses.PasswordResetTestClass@47c81abf]" name="verifyCancelButtonClickRedirectToLoginPageOrNot" class="testClasses.PasswordResetTestClass"/>
        <method signature="LoginTestClass.verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot()[pri:5, instance:testClasses.LoginTestClass@1f760b47]" name="verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot" class="testClasses.LoginTestClass"/>
      </group> <!-- Group B -->
      <group name="Group A">
        <method signature="LoginTestClass.verifySuccessfullLogin()[pri:2, instance:testClasses.LoginTestClass@60db1c0e]" name="verifySuccessfullLogin" class="testClasses.LoginTestClass"/>
        <method signature="LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@60db1c0e]" name="verifyUnsuccessfulLogin" class="testClasses.LoginTestClass"/>
        <method signature="LoginTestClass.verifySuccessfullLogin()[pri:2, instance:testClasses.LoginTestClass@1f760b47]" name="verifySuccessfullLogin" class="testClasses.LoginTestClass"/>
        <method signature="LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@1f760b47]" name="verifyUnsuccessfulLogin" class="testClasses.LoginTestClass"/>
      </group> <!-- Group A -->
      <group name="Group C">
        <method signature="PasswordResetTestClass.verifyIncorrectMailIdSubmitShowsThereIsNoUserWithThisEmail()[pri:1, instance:testClasses.PasswordResetTestClass@4ee203eb]" name="verifyIncorrectMailIdSubmitShowsThereIsNoUserWithThisEmail" class="testClasses.PasswordResetTestClass"/>
        <method signature="PasswordResetTestClass.verifyEmailCannotBeBlankMessageShowsWhenClikngSendButton()[pri:2, instance:testClasses.PasswordResetTestClass@4ee203eb]" name="verifyEmailCannotBeBlankMessageShowsWhenClikngSendButton" class="testClasses.PasswordResetTestClass"/>
        <method signature="PasswordResetTestClass.verifyEmailIsNotAValidEmailAddress()[pri:3, instance:testClasses.PasswordResetTestClass@4ee203eb]" name="verifyEmailIsNotAValidEmailAddress" class="testClasses.PasswordResetTestClass"/>
        <method signature="PasswordResetTestClass.verifyIncorrectMailIdSubmitShowsThereIsNoUserWithThisEmail()[pri:1, instance:testClasses.PasswordResetTestClass@47c81abf]" name="verifyIncorrectMailIdSubmitShowsThereIsNoUserWithThisEmail" class="testClasses.PasswordResetTestClass"/>
        <method signature="PasswordResetTestClass.verifyEmailCannotBeBlankMessageShowsWhenClikngSendButton()[pri:2, instance:testClasses.PasswordResetTestClass@47c81abf]" name="verifyEmailCannotBeBlankMessageShowsWhenClikngSendButton" class="testClasses.PasswordResetTestClass"/>
        <method signature="PasswordResetTestClass.verifyEmailIsNotAValidEmailAddress()[pri:3, instance:testClasses.PasswordResetTestClass@47c81abf]" name="verifyEmailIsNotAValidEmailAddress" class="testClasses.PasswordResetTestClass"/>
      </group> <!-- Group C -->
    </groups>
    <test started-at="2024-08-04T13:27:17 IST" name="ChromeTest" finished-at="2024-08-04T13:30:42 IST" duration-ms="204826">
      <class name="testClasses.PasswordResetTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.PasswordResetTestClass@4ee203eb]" started-at="2024-08-04T13:27:37 IST" name="beforeMethod" finished-at="2024-08-04T13:27:43 IST" duration-ms="5741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyIncorrectMailIdSubmitShowsThereIsNoUserWithThisEmail()[pri:1, instance:testClasses.PasswordResetTestClass@4ee203eb]" started-at="2024-08-04T13:27:43 IST" name="verifyIncorrectMailIdSubmitShowsThereIsNoUserWithThisEmail" finished-at="2024-08-04T13:27:45 IST" duration-ms="2014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIncorrectMailIdSubmitShowsThereIsNoUserWithThisEmail -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.PasswordResetTestClass@4ee203eb]" started-at="2024-08-04T13:27:45 IST" name="afterMethod" finished-at="2024-08-04T13:27:45 IST" duration-ms="357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyIncorrectMailIdSubmitShowsThereIsNoUserWithThisEmail status=SUCCESS method=PasswordResetTestClass.verifyIncorrectMailIdSubmitShowsThereIsNoUserWithThisEmail()[pri:1, instance:testClasses.PasswordResetTestClass@4ee203eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.PasswordResetTestClass@4ee203eb]" started-at="2024-08-04T13:28:34 IST" name="beforeMethod" finished-at="2024-08-04T13:28:40 IST" duration-ms="5848" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyEmailCannotBeBlankMessageShowsWhenClikngSendButton()[pri:2, instance:testClasses.PasswordResetTestClass@4ee203eb]" started-at="2024-08-04T13:28:40 IST" name="verifyEmailCannotBeBlankMessageShowsWhenClikngSendButton" finished-at="2024-08-04T13:28:42 IST" duration-ms="1653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailCannotBeBlankMessageShowsWhenClikngSendButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.PasswordResetTestClass@4ee203eb]" started-at="2024-08-04T13:28:42 IST" name="afterMethod" finished-at="2024-08-04T13:28:42 IST" duration-ms="234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailCannotBeBlankMessageShowsWhenClikngSendButton status=SUCCESS method=PasswordResetTestClass.verifyEmailCannotBeBlankMessageShowsWhenClikngSendButton()[pri:2, instance:testClasses.PasswordResetTestClass@4ee203eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.PasswordResetTestClass@4ee203eb]" started-at="2024-08-04T13:29:01 IST" name="beforeMethod" finished-at="2024-08-04T13:29:07 IST" duration-ms="5817" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyEmailIsNotAValidEmailAddress()[pri:3, instance:testClasses.PasswordResetTestClass@4ee203eb]" started-at="2024-08-04T13:29:07 IST" name="verifyEmailIsNotAValidEmailAddress" finished-at="2024-08-04T13:29:09 IST" duration-ms="1760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailIsNotAValidEmailAddress -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.PasswordResetTestClass@4ee203eb]" started-at="2024-08-04T13:29:09 IST" name="afterMethod" finished-at="2024-08-04T13:29:09 IST" duration-ms="230" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailIsNotAValidEmailAddress status=SUCCESS method=PasswordResetTestClass.verifyEmailIsNotAValidEmailAddress()[pri:3, instance:testClasses.PasswordResetTestClass@4ee203eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.PasswordResetTestClass@4ee203eb]" started-at="2024-08-04T13:30:21 IST" name="beforeMethod" finished-at="2024-08-04T13:30:27 IST" duration-ms="5940" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCancelButtonClickRedirectToLoginPageOrNot()[pri:4, instance:testClasses.PasswordResetTestClass@4ee203eb]" started-at="2024-08-04T13:30:27 IST" name="verifyCancelButtonClickRedirectToLoginPageOrNot" finished-at="2024-08-04T13:30:28 IST" duration-ms="1472" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelButtonClickRedirectToLoginPageOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.PasswordResetTestClass@4ee203eb]" started-at="2024-08-04T13:30:28 IST" name="afterMethod" finished-at="2024-08-04T13:30:28 IST" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelButtonClickRedirectToLoginPageOrNot status=SUCCESS method=PasswordResetTestClass.verifyCancelButtonClickRedirectToLoginPageOrNot()[pri:4, instance:testClasses.PasswordResetTestClass@4ee203eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.PasswordResetTestClass -->
      <class name="testClasses.LoginTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:27:56 IST" name="beforeMethod" finished-at="2024-08-04T13:28:02 IST" duration-ms="5718" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheExpectedPageIsOpenWhileHittingTheURL()[pri:1, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:28:02 IST" name="verifyTheExpectedPageIsOpenWhileHittingTheURL" finished-at="2024-08-04T13:28:02 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheExpectedPageIsOpenWhileHittingTheURL -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:28:02 IST" name="afterMethod" finished-at="2024-08-04T13:28:02 IST" duration-ms="228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheExpectedPageIsOpenWhileHittingTheURL status=SUCCESS method=LoginTestClass.verifyTheExpectedPageIsOpenWhileHittingTheURL()[pri:1, instance:testClasses.LoginTestClass@60db1c0e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:28:42 IST" name="beforeMethod" finished-at="2024-08-04T13:28:48 IST" duration-ms="6130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfullLogin()[pri:2, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:28:48 IST" name="verifySuccessfullLogin" finished-at="2024-08-04T13:28:51 IST" duration-ms="2500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:28:51 IST" name="afterMethod" finished-at="2024-08-04T13:28:51 IST" duration-ms="274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfullLogin status=SUCCESS method=LoginTestClass.verifySuccessfullLogin()[pri:2, instance:testClasses.LoginTestClass@60db1c0e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:29:20 IST" name="beforeMethod" finished-at="2024-08-04T13:29:26 IST" duration-ms="5813" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:29:26 IST" name="verifyUnsuccessfulLogin" data-provider="unsuccessful" finished-at="2024-08-04T13:29:27 IST" duration-ms="1304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:29:27 IST" name="afterMethod" finished-at="2024-08-04T13:29:27 IST" duration-ms="231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@60db1c0e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:29:27 IST" name="beforeMethod" finished-at="2024-08-04T13:29:49 IST" duration-ms="21934" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:29:49 IST" name="verifyUnsuccessfulLogin" data-provider="unsuccessful" finished-at="2024-08-04T13:29:52 IST" duration-ms="2589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carl]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1q2w3e4r]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:29:52 IST" name="afterMethod" finished-at="2024-08-04T13:29:52 IST" duration-ms="276" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@60db1c0e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:29:52 IST" name="beforeMethod" finished-at="2024-08-04T13:30:18 IST" duration-ms="26554" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:30:18 IST" name="verifyUnsuccessfulLogin" data-provider="unsuccessful" finished-at="2024-08-04T13:30:21 IST" duration-ms="2154" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carol]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:30:21 IST" name="afterMethod" finished-at="2024-08-04T13:30:21 IST" duration-ms="248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@60db1c0e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:30:28 IST" name="beforeMethod" finished-at="2024-08-04T13:30:35 IST" duration-ms="6105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCheckBoxRememberMeIsSelectedOrNot()[pri:4, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:30:35 IST" name="verifyCheckBoxRememberMeIsSelectedOrNot" finished-at="2024-08-04T13:30:35 IST" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCheckBoxRememberMeIsSelectedOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:30:35 IST" name="afterMethod" finished-at="2024-08-04T13:30:35 IST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCheckBoxRememberMeIsSelectedOrNot status=SUCCESS method=LoginTestClass.verifyCheckBoxRememberMeIsSelectedOrNot()[pri:4, instance:testClasses.LoginTestClass@60db1c0e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:30:35 IST" name="beforeMethod" finished-at="2024-08-04T13:30:41 IST" duration-ms="6019" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot()[pri:5, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:30:41 IST" name="verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot" finished-at="2024-08-04T13:30:42 IST" duration-ms="953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@60db1c0e]" started-at="2024-08-04T13:30:42 IST" name="afterMethod" finished-at="2024-08-04T13:30:42 IST" duration-ms="263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot status=SUCCESS method=LoginTestClass.verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot()[pri:5, instance:testClasses.LoginTestClass@60db1c0e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.LoginTestClass -->
      <class name="testClasses.DeductionTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.DeductionTestClass@147e2ae7]" started-at="2024-08-04T13:28:02 IST" name="beforeMethod" finished-at="2024-08-04T13:28:08 IST" duration-ms="5848" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyViewButtonClickOpensProfileViewPage()[pri:1, instance:testClasses.DeductionTestClass@147e2ae7]" started-at="2024-08-04T13:28:08 IST" name="verifyViewButtonClickOpensProfileViewPage" finished-at="2024-08-04T13:28:12 IST" duration-ms="3869" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyViewButtonClickOpensProfileViewPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.DeductionTestClass@147e2ae7]" started-at="2024-08-04T13:28:12 IST" name="afterMethod" finished-at="2024-08-04T13:28:12 IST" duration-ms="268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyViewButtonClickOpensProfileViewPage status=SUCCESS method=DeductionTestClass.verifyViewButtonClickOpensProfileViewPage()[pri:1, instance:testClasses.DeductionTestClass@147e2ae7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.DeductionTestClass@147e2ae7]" started-at="2024-08-04T13:28:12 IST" name="beforeMethod" finished-at="2024-08-04T13:28:18 IST" duration-ms="6062" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="searchAWorkerIsVisibleOrNotInTheList()[pri:2, instance:testClasses.DeductionTestClass@147e2ae7]" started-at="2024-08-04T13:28:18 IST" name="searchAWorkerIsVisibleOrNotInTheList" finished-at="2024-08-04T13:28:34 IST" duration-ms="16070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAWorkerIsVisibleOrNotInTheList -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.DeductionTestClass@147e2ae7]" started-at="2024-08-04T13:28:34 IST" name="afterMethod" finished-at="2024-08-04T13:28:34 IST" duration-ms="323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchAWorkerIsVisibleOrNotInTheList status=SUCCESS method=DeductionTestClass.searchAWorkerIsVisibleOrNotInTheList()[pri:2, instance:testClasses.DeductionTestClass@147e2ae7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.DeductionTestClass -->
      <class name="testClasses.ClientTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.ClientTestClass@7068e664]" started-at="2024-08-04T13:27:45 IST" name="beforeMethod" finished-at="2024-08-04T13:27:51 IST" duration-ms="5756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyResetButtonIsWorkingOrNot()[pri:1, instance:testClasses.ClientTestClass@7068e664]" started-at="2024-08-04T13:27:51 IST" name="verifyResetButtonIsWorkingOrNot" finished-at="2024-08-04T13:27:56 IST" duration-ms="4749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResetButtonIsWorkingOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.ClientTestClass@7068e664]" started-at="2024-08-04T13:27:56 IST" name="afterMethod" finished-at="2024-08-04T13:27:56 IST" duration-ms="227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyResetButtonIsWorkingOrNot status=SUCCESS method=ClientTestClass.verifyResetButtonIsWorkingOrNot()[pri:1, instance:testClasses.ClientTestClass@7068e664] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.ClientTestClass@7068e664]" started-at="2024-08-04T13:28:51 IST" name="beforeMethod" finished-at="2024-08-04T13:28:57 IST" duration-ms="6153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfullSearchUsingClientId()[pri:2, instance:testClasses.ClientTestClass@7068e664]" started-at="2024-08-04T13:28:57 IST" name="verifySuccessfullSearchUsingClientId" finished-at="2024-08-04T13:29:01 IST" duration-ms="3694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullSearchUsingClientId -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.ClientTestClass@7068e664]" started-at="2024-08-04T13:29:01 IST" name="afterMethod" finished-at="2024-08-04T13:29:01 IST" duration-ms="288" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfullSearchUsingClientId status=SUCCESS method=ClientTestClass.verifySuccessfullSearchUsingClientId()[pri:2, instance:testClasses.ClientTestClass@7068e664] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.ClientTestClass@7068e664]" started-at="2024-08-04T13:29:09 IST" name="beforeMethod" finished-at="2024-08-04T13:29:15 IST" duration-ms="5822" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnSuccessfullSearchUsingClentId()[pri:3, instance:testClasses.ClientTestClass@7068e664]" started-at="2024-08-04T13:29:15 IST" name="verifyUnSuccessfullSearchUsingClentId" finished-at="2024-08-04T13:29:19 IST" duration-ms="4426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnSuccessfullSearchUsingClentId -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.ClientTestClass@7068e664]" started-at="2024-08-04T13:29:19 IST" name="afterMethod" finished-at="2024-08-04T13:29:20 IST" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnSuccessfullSearchUsingClentId status=SUCCESS method=ClientTestClass.verifyUnSuccessfullSearchUsingClentId()[pri:3, instance:testClasses.ClientTestClass@7068e664] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.ClientTestClass -->
      <class name="testClasses.AddDeductionTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.AddDeductionTestClass@1a5a4e19]" started-at="2024-08-04T13:27:17 IST" name="beforeMethod" finished-at="2024-08-04T13:27:24 IST" duration-ms="6742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addDeductionSuccesfuly()[pri:1, instance:testClasses.AddDeductionTestClass@1a5a4e19]" started-at="2024-08-04T13:27:24 IST" name="addDeductionSuccesfuly" finished-at="2024-08-04T13:27:37 IST" duration-ms="12731" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDeductionSuccesfuly -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.AddDeductionTestClass@1a5a4e19]" started-at="2024-08-04T13:27:37 IST" name="afterMethod" finished-at="2024-08-04T13:27:37 IST" duration-ms="383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addDeductionSuccesfuly status=SUCCESS method=AddDeductionTestClass.addDeductionSuccesfuly()[pri:1, instance:testClasses.AddDeductionTestClass@1a5a4e19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.AddDeductionTestClass -->
    </test> <!-- ChromeTest -->
    <test started-at="2024-08-04T13:27:17 IST" name="EdgeTest" finished-at="2024-08-04T13:32:06 IST" duration-ms="289115">
      <class name="testClasses.PasswordResetTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.PasswordResetTestClass@47c81abf]" started-at="2024-08-04T13:27:58 IST" name="beforeMethod" finished-at="2024-08-04T13:28:04 IST" duration-ms="5956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyIncorrectMailIdSubmitShowsThereIsNoUserWithThisEmail()[pri:1, instance:testClasses.PasswordResetTestClass@47c81abf]" started-at="2024-08-04T13:28:04 IST" name="verifyIncorrectMailIdSubmitShowsThereIsNoUserWithThisEmail" finished-at="2024-08-04T13:28:06 IST" duration-ms="1889" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIncorrectMailIdSubmitShowsThereIsNoUserWithThisEmail -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.PasswordResetTestClass@47c81abf]" started-at="2024-08-04T13:28:06 IST" name="afterMethod" finished-at="2024-08-04T13:28:08 IST" duration-ms="2486" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyIncorrectMailIdSubmitShowsThereIsNoUserWithThisEmail status=SUCCESS method=PasswordResetTestClass.verifyIncorrectMailIdSubmitShowsThereIsNoUserWithThisEmail()[pri:1, instance:testClasses.PasswordResetTestClass@47c81abf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.PasswordResetTestClass@47c81abf]" started-at="2024-08-04T13:29:23 IST" name="beforeMethod" finished-at="2024-08-04T13:29:29 IST" duration-ms="6078" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyEmailCannotBeBlankMessageShowsWhenClikngSendButton()[pri:2, instance:testClasses.PasswordResetTestClass@47c81abf]" started-at="2024-08-04T13:29:29 IST" name="verifyEmailCannotBeBlankMessageShowsWhenClikngSendButton" finished-at="2024-08-04T13:29:32 IST" duration-ms="2987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailCannotBeBlankMessageShowsWhenClikngSendButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.PasswordResetTestClass@47c81abf]" started-at="2024-08-04T13:29:32 IST" name="afterMethod" finished-at="2024-08-04T13:29:33 IST" duration-ms="1382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailCannotBeBlankMessageShowsWhenClikngSendButton status=SUCCESS method=PasswordResetTestClass.verifyEmailCannotBeBlankMessageShowsWhenClikngSendButton()[pri:2, instance:testClasses.PasswordResetTestClass@47c81abf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.PasswordResetTestClass@47c81abf]" started-at="2024-08-04T13:30:14 IST" name="beforeMethod" finished-at="2024-08-04T13:30:20 IST" duration-ms="5889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyEmailIsNotAValidEmailAddress()[pri:3, instance:testClasses.PasswordResetTestClass@47c81abf]" started-at="2024-08-04T13:30:20 IST" name="verifyEmailIsNotAValidEmailAddress" finished-at="2024-08-04T13:30:22 IST" duration-ms="1938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailIsNotAValidEmailAddress -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.PasswordResetTestClass@47c81abf]" started-at="2024-08-04T13:30:22 IST" name="afterMethod" finished-at="2024-08-04T13:30:23 IST" duration-ms="1473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailIsNotAValidEmailAddress status=SUCCESS method=PasswordResetTestClass.verifyEmailIsNotAValidEmailAddress()[pri:3, instance:testClasses.PasswordResetTestClass@47c81abf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.PasswordResetTestClass@47c81abf]" started-at="2024-08-04T13:31:17 IST" name="beforeMethod" finished-at="2024-08-04T13:31:23 IST" duration-ms="5500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCancelButtonClickRedirectToLoginPageOrNot()[pri:4, instance:testClasses.PasswordResetTestClass@47c81abf]" started-at="2024-08-04T13:31:23 IST" name="verifyCancelButtonClickRedirectToLoginPageOrNot" finished-at="2024-08-04T13:31:24 IST" duration-ms="1402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelButtonClickRedirectToLoginPageOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.PasswordResetTestClass@47c81abf]" started-at="2024-08-04T13:31:24 IST" name="afterMethod" finished-at="2024-08-04T13:31:25 IST" duration-ms="1323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelButtonClickRedirectToLoginPageOrNot status=SUCCESS method=PasswordResetTestClass.verifyCancelButtonClickRedirectToLoginPageOrNot()[pri:4, instance:testClasses.PasswordResetTestClass@47c81abf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.PasswordResetTestClass -->
      <class name="testClasses.LoginTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:28:38 IST" name="beforeMethod" finished-at="2024-08-04T13:28:44 IST" duration-ms="5770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheExpectedPageIsOpenWhileHittingTheURL()[pri:1, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:28:44 IST" name="verifyTheExpectedPageIsOpenWhileHittingTheURL" finished-at="2024-08-04T13:28:44 IST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheExpectedPageIsOpenWhileHittingTheURL -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:28:44 IST" name="afterMethod" finished-at="2024-08-04T13:28:46 IST" duration-ms="1447" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheExpectedPageIsOpenWhileHittingTheURL status=SUCCESS method=LoginTestClass.verifyTheExpectedPageIsOpenWhileHittingTheURL()[pri:1, instance:testClasses.LoginTestClass@1f760b47] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:29:33 IST" name="beforeMethod" finished-at="2024-08-04T13:29:40 IST" duration-ms="6383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfullLogin()[pri:2, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:29:40 IST" name="verifySuccessfullLogin" finished-at="2024-08-04T13:29:42 IST" duration-ms="2946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:29:42 IST" name="afterMethod" finished-at="2024-08-04T13:29:44 IST" duration-ms="1412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfullLogin status=SUCCESS method=LoginTestClass.verifySuccessfullLogin()[pri:2, instance:testClasses.LoginTestClass@1f760b47] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:30:35 IST" name="beforeMethod" finished-at="2024-08-04T13:30:41 IST" duration-ms="6230" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:30:41 IST" name="verifyUnsuccessfulLogin" data-provider="unsuccessful" finished-at="2024-08-04T13:30:42 IST" duration-ms="1237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:30:43 IST" name="afterMethod" finished-at="2024-08-04T13:30:44 IST" duration-ms="1404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@1f760b47] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:30:44 IST" name="beforeMethod" finished-at="2024-08-04T13:31:05 IST" duration-ms="21168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:31:05 IST" name="verifyUnsuccessfulLogin" data-provider="unsuccessful" finished-at="2024-08-04T13:31:06 IST" duration-ms="1298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carl]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1q2w3e4r]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:31:06 IST" name="afterMethod" finished-at="2024-08-04T13:31:08 IST" duration-ms="1644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@1f760b47] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:31:08 IST" name="beforeMethod" finished-at="2024-08-04T13:31:14 IST" duration-ms="5851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:31:14 IST" name="verifyUnsuccessfulLogin" data-provider="unsuccessful" finished-at="2024-08-04T13:31:16 IST" duration-ms="1873" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carol]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:31:16 IST" name="afterMethod" finished-at="2024-08-04T13:31:17 IST" duration-ms="1326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@1f760b47] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:31:25 IST" name="beforeMethod" finished-at="2024-08-04T13:31:31 IST" duration-ms="5803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCheckBoxRememberMeIsSelectedOrNot()[pri:4, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:31:31 IST" name="verifyCheckBoxRememberMeIsSelectedOrNot" finished-at="2024-08-04T13:31:31 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCheckBoxRememberMeIsSelectedOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:31:31 IST" name="afterMethod" finished-at="2024-08-04T13:31:33 IST" duration-ms="1301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCheckBoxRememberMeIsSelectedOrNot status=SUCCESS method=LoginTestClass.verifyCheckBoxRememberMeIsSelectedOrNot()[pri:4, instance:testClasses.LoginTestClass@1f760b47] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:31:33 IST" name="beforeMethod" finished-at="2024-08-04T13:32:04 IST" duration-ms="31536" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot()[pri:5, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:32:04 IST" name="verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot" finished-at="2024-08-04T13:32:05 IST" duration-ms="993" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@1f760b47]" started-at="2024-08-04T13:32:05 IST" name="afterMethod" finished-at="2024-08-04T13:32:06 IST" duration-ms="1314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot status=SUCCESS method=LoginTestClass.verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot()[pri:5, instance:testClasses.LoginTestClass@1f760b47] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.LoginTestClass -->
      <class name="testClasses.DeductionTestClass">
        <test-method is-config="true" signature="createReport(org.testng.ITestContext)[pri:0, instance:testClasses.DeductionTestClass@536dbea0]" started-at="2024-08-04T13:27:17 IST" name="createReport" finished-at="2024-08-04T13:27:17 IST" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6cdba6dc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createReport -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.DeductionTestClass@536dbea0]" started-at="2024-08-04T13:28:46 IST" name="beforeMethod" finished-at="2024-08-04T13:28:52 IST" duration-ms="6130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyViewButtonClickOpensProfileViewPage()[pri:1, instance:testClasses.DeductionTestClass@536dbea0]" started-at="2024-08-04T13:28:52 IST" name="verifyViewButtonClickOpensProfileViewPage" finished-at="2024-08-04T13:28:56 IST" duration-ms="4404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyViewButtonClickOpensProfileViewPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.DeductionTestClass@536dbea0]" started-at="2024-08-04T13:28:56 IST" name="afterMethod" finished-at="2024-08-04T13:28:58 IST" duration-ms="1428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyViewButtonClickOpensProfileViewPage status=SUCCESS method=DeductionTestClass.verifyViewButtonClickOpensProfileViewPage()[pri:1, instance:testClasses.DeductionTestClass@536dbea0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.DeductionTestClass@536dbea0]" started-at="2024-08-04T13:28:58 IST" name="beforeMethod" finished-at="2024-08-04T13:29:04 IST" duration-ms="6553" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="searchAWorkerIsVisibleOrNotInTheList()[pri:2, instance:testClasses.DeductionTestClass@536dbea0]" started-at="2024-08-04T13:29:04 IST" name="searchAWorkerIsVisibleOrNotInTheList" finished-at="2024-08-04T13:29:21 IST" duration-ms="16721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAWorkerIsVisibleOrNotInTheList -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.DeductionTestClass@536dbea0]" started-at="2024-08-04T13:29:21 IST" name="afterMethod" finished-at="2024-08-04T13:29:23 IST" duration-ms="1648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchAWorkerIsVisibleOrNotInTheList status=SUCCESS method=DeductionTestClass.searchAWorkerIsVisibleOrNotInTheList()[pri:2, instance:testClasses.DeductionTestClass@536dbea0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.DeductionTestClass -->
      <class name="testClasses.ClientTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.ClientTestClass@21d03963]" started-at="2024-08-04T13:28:08 IST" name="beforeMethod" finished-at="2024-08-04T13:28:31 IST" duration-ms="22168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyResetButtonIsWorkingOrNot()[pri:1, instance:testClasses.ClientTestClass@21d03963]" started-at="2024-08-04T13:28:31 IST" name="verifyResetButtonIsWorkingOrNot" finished-at="2024-08-04T13:28:37 IST" duration-ms="6441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResetButtonIsWorkingOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.ClientTestClass@21d03963]" started-at="2024-08-04T13:28:37 IST" name="afterMethod" finished-at="2024-08-04T13:28:38 IST" duration-ms="1415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyResetButtonIsWorkingOrNot status=SUCCESS method=ClientTestClass.verifyResetButtonIsWorkingOrNot()[pri:1, instance:testClasses.ClientTestClass@21d03963] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.ClientTestClass@21d03963]" started-at="2024-08-04T13:29:44 IST" name="beforeMethod" finished-at="2024-08-04T13:30:06 IST" duration-ms="22429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfullSearchUsingClientId()[pri:2, instance:testClasses.ClientTestClass@21d03963]" started-at="2024-08-04T13:30:06 IST" name="verifySuccessfullSearchUsingClientId" finished-at="2024-08-04T13:30:12 IST" duration-ms="5992" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullSearchUsingClientId -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.ClientTestClass@21d03963]" started-at="2024-08-04T13:30:12 IST" name="afterMethod" finished-at="2024-08-04T13:30:14 IST" duration-ms="1493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfullSearchUsingClientId status=SUCCESS method=ClientTestClass.verifySuccessfullSearchUsingClientId()[pri:2, instance:testClasses.ClientTestClass@21d03963] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.ClientTestClass@21d03963]" started-at="2024-08-04T13:30:23 IST" name="beforeMethod" finished-at="2024-08-04T13:30:29 IST" duration-ms="5998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnSuccessfullSearchUsingClentId()[pri:3, instance:testClasses.ClientTestClass@21d03963]" started-at="2024-08-04T13:30:29 IST" name="verifyUnSuccessfullSearchUsingClentId" finished-at="2024-08-04T13:30:33 IST" duration-ms="4364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnSuccessfullSearchUsingClentId -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.ClientTestClass@21d03963]" started-at="2024-08-04T13:30:33 IST" name="afterMethod" finished-at="2024-08-04T13:30:35 IST" duration-ms="1329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnSuccessfullSearchUsingClentId status=SUCCESS method=ClientTestClass.verifyUnSuccessfullSearchUsingClentId()[pri:3, instance:testClasses.ClientTestClass@21d03963] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.ClientTestClass -->
      <class name="testClasses.AddDeductionTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.AddDeductionTestClass@776a6d9b]" started-at="2024-08-04T13:27:17 IST" name="beforeMethod" finished-at="2024-08-04T13:27:25 IST" duration-ms="7400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="addDeductionSuccesfuly()[pri:1, instance:testClasses.AddDeductionTestClass@776a6d9b]" started-at="2024-08-04T13:27:25 IST" name="addDeductionSuccesfuly" finished-at="2024-08-04T13:27:40 IST" duration-ms="15441" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.xpath: (//table[@id='w0']//tbody//tr//td[1])[1] (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.edge.EdgeDriver
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 127.0.2651.86, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:52063}, msedge: {msedgedriverVersion: 127.0.2651.86 (ac31d8b82969..., userDataDir: C:\Users\iamha\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:52063/devtoo..., se:cdpVersion: 127.0.2651.86, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c2bf2bc239e4bbb3546414cfc6391d8d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: (//table[@id='w0']//tbody//tr//td[1])[1] (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.edge.EdgeDriver
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 127.0.2651.86, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:52063}, msedge: {msedgedriverVersion: 127.0.2651.86 (ac31d8b82969..., userDataDir: C:\Users\iamha\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:52063/devtoo..., se:cdpVersion: 127.0.2651.86, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c2bf2bc239e4bbb3546414cfc6391d8d
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at utilities.ExplicitWaitClass.visibilityOfElementLocatedXpath(ExplicitWaitClass.java:42)
at pageClasses.AddDeductionViewPageClass.getTextFromDeductionAddedViewPage(AddDeductionViewPageClass.java:28)
at testClasses.AddDeductionTestClass.addDeductionSuccesfuly(AddDeductionTestClass.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDeductionSuccesfuly -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.AddDeductionTestClass@776a6d9b]" started-at="2024-08-04T13:27:40 IST" name="afterMethod" finished-at="2024-08-04T13:27:42 IST" duration-ms="1501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addDeductionSuccesfuly status=SKIP method=AddDeductionTestClass.addDeductionSuccesfuly()[pri:1, instance:testClasses.AddDeductionTestClass@776a6d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.AddDeductionTestClass@776a6d9b]" started-at="2024-08-04T13:27:42 IST" name="beforeMethod" finished-at="2024-08-04T13:27:48 IST" duration-ms="6286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addDeductionSuccesfuly()[pri:1, instance:testClasses.AddDeductionTestClass@776a6d9b]" started-at="2024-08-04T13:27:48 IST" name="addDeductionSuccesfuly" finished-at="2024-08-04T13:27:56 IST" duration-ms="8522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDeductionSuccesfuly -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.AddDeductionTestClass@776a6d9b]" started-at="2024-08-04T13:27:56 IST" name="afterMethod" finished-at="2024-08-04T13:27:58 IST" duration-ms="1589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addDeductionSuccesfuly status=SUCCESS method=AddDeductionTestClass.addDeductionSuccesfuly()[pri:1, instance:testClasses.AddDeductionTestClass@776a6d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.AddDeductionTestClass -->
    </test> <!-- EdgeTest -->
  </suite> <!-- CrossBrowserSuite -->
</testng-results>
