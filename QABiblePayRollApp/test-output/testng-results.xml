<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="10" passed="8" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-04T12:56:07 IST" name="Suite" finished-at="2024-08-04T12:57:42 IST" duration-ms="94555">
    <groups>
      <group name="Group B">
        <method signature="LoginTestClass.verifyTheExpectedPageIsOpenWhileHittingTheURL()[pri:1, instance:testClasses.LoginTestClass@41d477ed]" name="verifyTheExpectedPageIsOpenWhileHittingTheURL" class="testClasses.LoginTestClass"/>
        <method signature="LoginTestClass.verifyCheckBoxRememberMeIsSelectedOrNot()[pri:4, instance:testClasses.LoginTestClass@41d477ed]" name="verifyCheckBoxRememberMeIsSelectedOrNot" class="testClasses.LoginTestClass"/>
        <method signature="LoginTestClass.verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot()[pri:5, instance:testClasses.LoginTestClass@41d477ed]" name="verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot" class="testClasses.LoginTestClass"/>
      </group> <!-- Group B -->
      <group name="Group A">
        <method signature="LoginTestClass.verifySuccessfullLogin()[pri:2, instance:testClasses.LoginTestClass@41d477ed]" name="verifySuccessfullLogin" class="testClasses.LoginTestClass"/>
        <method signature="LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@41d477ed]" name="verifyUnsuccessfulLogin" class="testClasses.LoginTestClass"/>
      </group> <!-- Group A -->
    </groups>
    <test started-at="2024-08-04T12:56:07 IST" name="Test" finished-at="2024-08-04T12:57:42 IST" duration-ms="94555">
      <class name="testClasses.LoginTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:56:50 IST" name="beforeMethod" finished-at="2024-08-04T12:56:56 IST" duration-ms="5618" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheExpectedPageIsOpenWhileHittingTheURL()[pri:1, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:56:56 IST" name="verifyTheExpectedPageIsOpenWhileHittingTheURL" finished-at="2024-08-04T12:56:56 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheExpectedPageIsOpenWhileHittingTheURL -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:56:56 IST" name="afterMethod" finished-at="2024-08-04T12:56:56 IST" duration-ms="195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheExpectedPageIsOpenWhileHittingTheURL status=SUCCESS method=LoginTestClass.verifyTheExpectedPageIsOpenWhileHittingTheURL()[pri:1, instance:testClasses.LoginTestClass@41d477ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:56:56 IST" name="beforeMethod" finished-at="2024-08-04T12:57:02 IST" duration-ms="5867" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfullLogin()[pri:2, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:02 IST" name="verifySuccessfullLogin" finished-at="2024-08-04T12:57:05 IST" duration-ms="2637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:05 IST" name="afterMethod" finished-at="2024-08-04T12:57:05 IST" duration-ms="214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfullLogin status=SUCCESS method=LoginTestClass.verifySuccessfullLogin()[pri:2, instance:testClasses.LoginTestClass@41d477ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:05 IST" name="beforeMethod" finished-at="2024-08-04T12:57:11 IST" duration-ms="6291" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:11 IST" name="verifyUnsuccessfulLogin" data-provider="unsuccessful" finished-at="2024-08-04T12:57:13 IST" duration-ms="1307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:13 IST" name="afterMethod" finished-at="2024-08-04T12:57:13 IST" duration-ms="214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@41d477ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:13 IST" name="beforeMethod" finished-at="2024-08-04T12:57:19 IST" duration-ms="5980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:19 IST" name="verifyUnsuccessfulLogin" data-provider="unsuccessful" finished-at="2024-08-04T12:57:20 IST" duration-ms="1277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carl]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1q2w3e4r]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:20 IST" name="afterMethod" finished-at="2024-08-04T12:57:20 IST" duration-ms="202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@41d477ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:20 IST" name="beforeMethod" finished-at="2024-08-04T12:57:26 IST" duration-ms="5786" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:26 IST" name="verifyUnsuccessfulLogin" data-provider="unsuccessful" finished-at="2024-08-04T12:57:28 IST" duration-ms="1783" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carol]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:28 IST" name="afterMethod" finished-at="2024-08-04T12:57:28 IST" duration-ms="230" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:testClasses.LoginTestClass@41d477ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:28 IST" name="beforeMethod" finished-at="2024-08-04T12:57:34 IST" duration-ms="5778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCheckBoxRememberMeIsSelectedOrNot()[pri:4, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:34 IST" name="verifyCheckBoxRememberMeIsSelectedOrNot" finished-at="2024-08-04T12:57:34 IST" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCheckBoxRememberMeIsSelectedOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:34 IST" name="afterMethod" finished-at="2024-08-04T12:57:34 IST" duration-ms="237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCheckBoxRememberMeIsSelectedOrNot status=SUCCESS method=LoginTestClass.verifyCheckBoxRememberMeIsSelectedOrNot()[pri:4, instance:testClasses.LoginTestClass@41d477ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:34 IST" name="beforeMethod" finished-at="2024-08-04T12:57:39 IST" duration-ms="5409" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot()[pri:5, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:39 IST" name="verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot" finished-at="2024-08-04T12:57:42 IST" duration-ms="2340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginTestClass@41d477ed]" started-at="2024-08-04T12:57:42 IST" name="afterMethod" finished-at="2024-08-04T12:57:42 IST" duration-ms="215" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot status=SUCCESS method=LoginTestClass.verifyTheForgetPasswordResetCliksDirectedToCorrectPageOrNot()[pri:5, instance:testClasses.LoginTestClass@41d477ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.LoginTestClass -->
      <class name="testClasses.AddDeductionTestClass">
        <test-method is-config="true" signature="createReport(org.testng.ITestContext)[pri:0, instance:testClasses.AddDeductionTestClass@1aafa419]" started-at="2024-08-04T12:56:07 IST" name="createReport" finished-at="2024-08-04T12:56:07 IST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7ac48e10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createReport -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.AddDeductionTestClass@1aafa419]" started-at="2024-08-04T12:56:08 IST" name="beforeMethod" finished-at="2024-08-04T12:56:21 IST" duration-ms="13445" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="addDeductionSuccesfuly()[pri:1, instance:testClasses.AddDeductionTestClass@1aafa419]" started-at="2024-08-04T12:56:21 IST" name="addDeductionSuccesfuly" finished-at="2024-08-04T12:56:36 IST" duration-ms="14616" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.xpath: (//table[@id='w0']//tbody//tr//td[1])[1] (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.89, chrome: {chromedriverVersion: 127.0.6533.88 (a2d0cb026721..., userDataDir: C:\Users\iamha\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63317}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63317/devtoo..., se:cdpVersion: 127.0.6533.89, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 49c86efb65bb77536df56345f161d556]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: (//table[@id='w0']//tbody//tr//td[1])[1] (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.89, chrome: {chromedriverVersion: 127.0.6533.88 (a2d0cb026721..., userDataDir: C:\Users\iamha\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63317}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63317/devtoo..., se:cdpVersion: 127.0.6533.89, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 49c86efb65bb77536df56345f161d556
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at utilities.ExplicitWaitClass.visibilityOfElementLocatedXpath(ExplicitWaitClass.java:42)
at pageClasses.AddDeductionViewPageClass.getTextFromDeductionAddedViewPage(AddDeductionViewPageClass.java:28)
at testClasses.AddDeductionTestClass.addDeductionSuccesfuly(AddDeductionTestClass.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDeductionSuccesfuly -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.AddDeductionTestClass@1aafa419]" started-at="2024-08-04T12:56:36 IST" name="afterMethod" finished-at="2024-08-04T12:56:36 IST" duration-ms="358" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addDeductionSuccesfuly status=SKIP method=AddDeductionTestClass.addDeductionSuccesfuly()[pri:1, instance:testClasses.AddDeductionTestClass@1aafa419] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.AddDeductionTestClass@1aafa419]" started-at="2024-08-04T12:56:36 IST" name="beforeMethod" finished-at="2024-08-04T12:56:42 IST" duration-ms="5902" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addDeductionSuccesfuly()[pri:1, instance:testClasses.AddDeductionTestClass@1aafa419]" started-at="2024-08-04T12:56:42 IST" name="addDeductionSuccesfuly" finished-at="2024-08-04T12:56:50 IST" duration-ms="8034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDeductionSuccesfuly -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.AddDeductionTestClass@1aafa419]" started-at="2024-08-04T12:56:50 IST" name="afterMethod" finished-at="2024-08-04T12:56:50 IST" duration-ms="267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addDeductionSuccesfuly status=SUCCESS method=AddDeductionTestClass.addDeductionSuccesfuly()[pri:1, instance:testClasses.AddDeductionTestClass@1aafa419] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.AddDeductionTestClass -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
